import React, { useState } from 'react'
import {
  Box,
  Slider,
  SliderFilledTrack,
  SliderThumb,
  SliderTrack,
  Stack,
  Text,
  Input,
  Switch,
  Spinner,
  HStack,
} from '@chakra-ui/react'
import { useMonthlyAmountQuery } from 'apollo/generated/graphqlClient'
import type { NextPage } from 'next'
import { GetServerSidePropsContext } from 'next'
import Head from 'next/head'
import { useTranslation } from 'next-i18next'
import { useDebounce } from 'use-debounce'
import { serverSideTranslations } from 'utils/i18n'

const Home: NextPage = () => {
  const { t } = useTranslation(['common'])

  const [loanBalance, setLoanBalance] = useState(5000)
  const [installmentsQuantity, setInstallmentsQuantity] = useState(12)
  const [isInsurance, setIsInsurance] = useState(false)

  const [debouncedLoanBalance] = useDebounce(loanBalance, 1000)
  const [debouncedInstallmentsQuantity] = useDebounce(installmentsQuantity, 1000)
  const [debouncedIsInsurance] = useDebounce(isInsurance, 1000)

  const wikiSearchQuery = useMonthlyAmountQuery({
    variables: {
      input: {
        interestRate: 0.05,
        insuranceRate: debouncedIsInsurance ? 0.2 : 0,
        loanBalance: debouncedLoanBalance ?? 0,
        installmentsQuantity: debouncedInstallmentsQuantity ?? 0,
      },
    },
  })

  return (
    <>
      <Head>
        <title>{t('appName')}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Text
        fontSize="36px"
        fontWeight="bold"
        textAlign="center"
        color="brand.crabNebulaLight"
        my="30px"
      >
        {t('home.title')}
      </Text>

      <HStack justifyContent="center" p={6} mx={4}>
        <Stack
          w="100%"
          maxW="400px"
          borderWidth={1}
          borderRadius="lg"
          boxShadow="lg"
          spacing={4}
          p={6}
        >
          <Text fontSize="lg" fontWeight="bold">
            Loan Calculator
          </Text>

          <Text>Loan Amount: ${loanBalance}</Text>

          <Slider
            value={loanBalance}
            min={1000}
            max={50000}
            step={1000}
            onChange={(value) => setLoanBalance(value)}
          >
            <SliderTrack>
              <SliderFilledTrack />
            </SliderTrack>
            <SliderThumb />
          </Slider>

          <Input
            mt={2}
            value={loanBalance}
            onChange={(e) => setLoanBalance(Number(e.target.value))}
          />

          <Text>Repayment Length: {installmentsQuantity} months</Text>

          <Slider
            value={installmentsQuantity}
            min={1}
            max={24}
            step={1}
            onChange={(value) => setInstallmentsQuantity(value)}
          >
            <SliderTrack>
              <SliderFilledTrack />
            </SliderTrack>
            <SliderThumb />
          </Slider>

          <Input
            mt={2}
            value={installmentsQuantity}
            onChange={(e) => setInstallmentsQuantity(Number(e.target.value))}
          />

          <Text>With Insurance</Text>
          <Switch isChecked={isInsurance} onChange={(e) => setIsInsurance(e.target.checked)} />

          <HStack justifyContent="center">
            {wikiSearchQuery.loading ? (
              <Spinner size="lg" />
            ) : (
              <Text fontSize="lg" fontWeight="bold">
                Monthly Payment: ${wikiSearchQuery.data?.monthlyAmount.toFixed(2)}
              </Text>
            )}
          </HStack>
        </Stack>
      </HStack>
    </>
  )
}

export const getServerSideProps = async (context: GetServerSidePropsContext) => ({
  props: {
    ...(await serverSideTranslations(context, ['common'])),
  },
})

export default Home
